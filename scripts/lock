#!/bin/bash

if [ "${SCRIPT_PATH}" == "" ]; then
    echo "This script should not be called directly! Please use mq.sh"
    exit -1
fi

function LockName() {
    local system=$1
    echo "${BASE}/${system}/queue.lock"
}

function LockSystem() {
    local system=$1
    # Retry the lock every second, retrying 60 times for a total of 1 minute
    # If we don't get it after that then the lock is bugged
    RemoteCommand lockfile -1 -r 60 "$(LockName ${system})"
    return $?
}

function FastLockSystem() {
    local system=$1
    # Retry the lock every second for 2 seconds
    RemoteCommand lockfile -1 -r 2 "$(LockName ${system})"
    return $?
}

# Performs lockfile, but does scaling delay to acquire the lock fast
# under the assumption that it should be free. Then slows down to conserve resources
function LockFileInteractive() {
    local lock=$1
    # Try every 2 seconds
    RemoteCommand lockfile -2 "${lock}"
    return $?
}

function UnlockSystem() {
    local sytem=$1
    RemoteCommand rm -f "$(LockName ${system})"
}

