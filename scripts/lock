#!/bin/bash

if [ "${SCRIPT_PATH}" == "" ]; then
    echo "This script should not be called directly! Please use mq.sh"
    exit -1
fi

function LockName() {
    local system=$1
    echo "${BASE}/${system}.lock"
}

function LockOwner() {
    local system=$1
    RemoteCommand bash -c "stat --format='%U' $(LockName ${system}) 2>/dev/null" | sed 's/\r//g'
}

function LockGetInfo() {
    RemoteCommand bash -c "stat --format='%U,%y' $(LockName ${system}) 2>/dev/null"| sed 's/\r//g'
}

function LockSystemPrintInfo() {
    local system=$1
    local info=$(LockGetInfo)
    local owner=`echo $info | cut -d ',' -f 1`
    local since=`echo $info | cut -d ',' -f 2`
    if [ "${owner}" == "" ]; then
        echo "Lock for $system currently free"
        return;
    fi
    echo "Lock for $system held by $owner since $since"
}

function LockSystem() {
    local system=$1
    local retry_period=$2
    local total_retries=$3
    local owner=`LockOwner ${system}`
    if [ "${owner}" == "${REMOTEUSER}" ]; then
        echo "Attempting to grab lock you already own. Please explicitly release"
        return -1
    fi
    RemoteCommand lockfile -${retry_period} -r ${total_retries} "$(LockName ${system})"
    return $?
}

function UnlockSystem() {
    local sytem=$1
    local owner=`LockOwner ${system}`
    if [ ${owner} != ${REMOTEUSER} ]; then
        echo "Attempting to unlock system ${system} that you do not hold"
        return;
    fi
    RemoteCommand rm -f "$(LockName ${system})"
}
