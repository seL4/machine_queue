#!/bin/bash

if [ "${SCRIPT_PATH}" == "" ]; then
    echo "This script should not be called directly! Please use mq.sh"
    exit -1
fi

function Dequeue() {
    local system=$1
    echo "Attempting to run jobs on system ${system}"
    # Verify the requested system exists
    IsSystemValid "${system}"
    if [ $? -ne 0 ] ; then
        echo "System $system does not exist"
        exit -1
    fi
    echo "Acquiring lock for system ${system}"
    # Grab the lock
    if ! LockSystem "${system}"; then
        echo "Failed to acquire system (${system}) lock. Assuming kill occured, nothing to clean up"
        exit -1
    fi
    # Pull a job out of the queue
    local user=$(QueueHead "${system}")
    user=$(echo -n $user | tr -d '\r')
    UnlockSystem "${system}"
    if [ "${user}" = "" ]; then
        echo "No jobs left to run on ${system}"
        exit 0
    fi
    echo "Signalling user ${user} to run on system ${system}"
    # Remove the want lock
    RemoveLock "$(JobWantLock ${system} ${user})"
    # Now wait for the complete lock
    echo "Waiting for job to be complete"
    WaitJobComplete ${system} ${user}
    # We don't care about the exit status. Just clean the job up
    echo "Job completed with exit status $? Cleaning it up"
    if ! LockSystem "${system}"; then
        echo "Failed to acquire system lock. Possibly in an incosistent state"
        exit -1
    fi
    RemoveJob ${system} ${user}
    UnlockSystem "${system}"
    # Go forever
    Dequeue "${system}"
}
